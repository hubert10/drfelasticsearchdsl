version: "3.7"
services:
  postgres_db:
    restart: always
    image: postgres:12.0-alpine
    ports:
      - "5438:5432"
    env_file:
      - env.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment: 
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  worker:
    build: .
    restart: on-failure
    command:
      [
        "celery",
        "worker",
        "--app=drfelasticsearchdsl",
        "--loglevel=INFO",
      ]
    volumes:
      - .:/code
    depends_on:
      - rabbit
      - postgres_db

  # A RabbitMQ(message-broker) container for sending and receiving messages
  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    env_file:
      - rabbitmq.env
    ports:
      - "5673:5673"
      - "15672:15672"

  # A Django Application container.
  web:
    build: .
    command: python3 /code/manage.py runserver 0.0.0.0:8005
    env_file:
      - env.env
    volumes:
      - .:/code # 
    ports:
      - "8005:8005"

    depends_on:
      - postgres_db
      - elasticsearch
      - rabbit

volumes:
  postgres_data: 
  elasticsearch-data: 
    driver: local
